# SnipShift 2.0 - Replit Configuration
# Master controller for the Replit environment

modules = ["nodejs-20", "web", "postgresql-16"]
hidden = [".config", ".git", "generated-icon.png", "node_modules", "dist", "snipshift-next/node_modules", "snipshift-next/api/node_modules", "snipshift-next/web/node_modules"]

[nix]
channel = "stable-24_05"
packages = ["google-cloud-sdk", "glib", "gtk3", "nss", "dnsutils", "openssh_hpn", "stripe-cli", "imagemagick", "jq", "docker-compose"]

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================

[deployment]
build = ["sh", "-c", "cd snipshift-next/api && npm ci --production=false && npm run build"]
run = ["sh", "-c", "cd snipshift-next/api && node dist/index.js"]
deploymentTarget = "cloudrun"
healthCheck = "/health"
alwaysOn = true
restartPolicy = "always"

[deployment.ports]
localPort = 4000
externalPort = 80

[[ports]]
localPort = 5000
externalPort = 80
exposeLocalhost = true

[[ports]]
localPort = 8080
externalPort = 80

# =============================================================================
# DEVELOPMENT INSTRUCTIONS
# =============================================================================
# 
# IMPORTANT: This Replit workspace is configured for PRODUCTION DEPLOYMENT ONLY
# 
# For development:
# 1. Use Cursor locally where Vite/esbuild works perfectly
# 2. Run: npm run dev (starts both client and server)
# 3. Access: http://localhost:3000
# 
# For production deployment:
# 1. Use Replit Deployments tab
# 2. Deploy the API service only
# 3. Access: https://your-replit-url.replit.dev
#
# This avoids the Vite/esbuild compatibility issues in Replit's sandbox environment

# =============================================================================
# ENVIRONMENT VARIABLES
# =============================================================================

[env]
# Core Configuration
NODE_ENV = "production"
# PORT - Let Cloud Run set this dynamically during deployment

# Database Configuration
DATABASE_URL = "postgresql://snipshift:snipshift_password@localhost:5432/snipshift"
POSTGRES_PASSWORD = "snipshift_password"

# Redis Configuration
REDIS_URL = "redis://localhost:6379"

# JWT & Authentication
JWT_SECRET = "your-super-secret-jwt-key-change-in-production"
SESSION_SECRET = "your-session-secret-change-in-production"

# CORS Configuration
CORS_ORIGIN = "http://localhost:3000,http://localhost:3001,http://localhost:8081"

# Logging
LOG_LEVEL = "info"

# Development Skip Flags (for Replit environment)
SKIP_DB = "1"
SKIP_REDIS = "1"
SKIP_STRIPE = "1"

# Firebase Configuration
VITE_FIREBASE_API_KEY = "your-firebase-api-key"
VITE_FIREBASE_PROJECT_ID = "your-firebase-project-id"
VITE_FIREBASE_AUTH_DOMAIN = "your-firebase-project-id.firebaseapp.com"
VITE_FIREBASE_STORAGE_BUCKET = "your-firebase-project-id.appspot.com"
VITE_FIREBASE_MESSAGING_SENDER_ID = "your-messaging-sender-id"
VITE_FIREBASE_APP_ID = "your-firebase-app-id"

# Stripe Configuration
STRIPE_PUBLISHABLE_KEY = "your-stripe-publishable-key"
STRIPE_SECRET_KEY = "your-stripe-secret-key"
STRIPE_WEBHOOK_SECRET = "your-stripe-webhook-secret"

# Email Configuration
SMTP_HOST = "smtp.gmail.com"
SMTP_PORT = "587"
SMTP_USER = "your-email@gmail.com"
SMTP_PASS = "your-app-password"

# Security
CSRF_SECRET = "your-csrf-secret-change-in-production"
RATE_LIMIT_WINDOW_MS = "900000"
RATE_LIMIT_MAX_REQUESTS = "100"

# File Upload
MAX_FILE_SIZE = "10485760"
ALLOWED_FILE_TYPES = "image/jpeg,image/png,image/gif,image/webp"

# Cache Configuration
CACHE_TTL = "3600"
REDIS_CACHE_PREFIX = "snipshift:"

# Monitoring
ENABLE_METRICS = "true"
METRICS_PORT = "9090"

# Feature Flags
ENABLE_ANALYTICS = "true"
ENABLE_NOTIFICATIONS = "true"
ENABLE_CHAT = "true"
ENABLE_REAL_TIME = "true"

# Development Tools
ENABLE_DEBUG_ROUTES = "false"
ENABLE_SWAGGER_UI = "false"
ENABLE_GRAPHQL_PLAYGROUND = "false"